[{"content":"installation check the python at present Check if python has been installed.\nWe should use the python 3 rather the python 2.\npython3 -V or python -V If the output is like this Python 3.11.2 ,your cloud server is equipped with python.All we need is to set up a python virtual environment and make it the environment we use in the shell. If not,we need the download the python using apt , run the command sudo apt install python3-venv and repeat the step above.\nmake the parent folder for python environment Cd the parent folder where you want to put your python.Like me,I like to put it /home/lxz/app/python3.11.2.So I run the command cd /home/lxz/app after I assure the folder /home/lxz/app has been created after I run the command mkdir -p /home/lxz/app.\nset up the env Run the command to set up python environment python3 -m venv \u0026lt;name\u0026gt;.The name is the position you want to setup the python environment and it is also the python environment folder name.Like me,I usually to set it the python version like python3.11.2.You can also run from everywhere to run python3 -m venv \u0026lt;the absolute path\u0026gt;.\nadd it to the bash path We need to add python environment to our path to make sure when we run the python command,we are using the virtual environment rather the system python to make sure not to harm the system.\nEdit the file ~/.bashrc using editor like vim\nPut the below sentence to the end of the file.\n1 export PATH=\u0026lt;python_dir\u0026gt;/bin:$PATH Run the command to activate the .bashrc . ~/.bashrc\ntest the python Run the command to see if the python has been successfully installed.\n\u0026lt;python_dir\u0026gt;/bin/python -V\nIf it print linke this Python 3.11.2 ,the python has been successfully installed.\nset up the pip Some system is not equipped with pip.We can download it manually.\ndownload the file https://bootstrap.pypa.io/get-pip.py using the command wget https://bootstrap.pypa.io/get-pip.py\nRun the python file using python3 get-pip.py\nAfter install the pip,delete the get-pip.py with rm get-pip.py\ntest the pip Run the command pip -V,you can see the pip path from the output like this.\n1 pip 23.0.1 from /home/lxz/app/python3.11.2/lib/python3.11/site-packages/pip (python 3.11) See if the path is right.If not,check the above step about the .bashrc\n","date":"2025-05-07T19:40:47+08:00","image":"http://localhost:1313/p/2025/05/07/python-installation/cover_hu_4f4c34a9197b53a.png","permalink":"http://localhost:1313/p/2025/05/07/python-installation/","title":"python installation"},{"content":"summary php is a popular language for website.Many hosting provider provides cheap php server because their cost is also cheap.We can use these php server as a storage server.What protocol we can use?I find webdav is the most easy.And there is ready-made library for us to use.That is https://github.com/sabre-io/dav Now I tell you how to transform a php server to a storage server with the library.\ndocs https://sabre.io/dav/install is the official webdav library docs.We can see how to set up the webdav.\ndonwload the library Mkdir and cd the folder where we want to set up our server or the local folder in our computer.\n1 2 mkdir -p /var/www/webdav cd /var/www/webdav Download the library\n1 composer require sabre/dav edit the server file Write a file name webdav.php in the folder.Write the texts below to the file.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 \u0026lt;?php use Sabre\\DAV; require \u0026#39;vendor/autoload.php\u0026#39;; // This is where the webdav file folder is. $rootDirectory = new DAV\\FS\\Directory(\u0026#39;public\u0026#39;); // Set up the server $server = new DAV\\Server($rootDirectory); // This is the url of the php file $server-\u0026gt;setBaseUri(\u0026#39;/webdav.php\u0026#39;); // This is a lock plugin.It is optional. // $lockBackend = new DAV\\Locks\\Backend\\File(\u0026#39;data/locks\u0026#39;); // $lockPlugin = new DAV\\Locks\\Plugin($lockBackend); // $server-\u0026gt;addPlugin($lockPlugin); // This is a web control panel plugin.With it,we can get,send,list the files.It is optional. // $server-\u0026gt;addPlugin(new DAV\\Browser\\Plugin()); // This is for the auth.I think it is important. // use Sabre\\DAV\\Auth; // $authBackend = new Auth\\Backend\\File(\u0026#39;htdigest\u0026#39;); // $authBackend-\u0026gt;setRealm(\u0026#39;SabreDAV\u0026#39;); // $authPlugin = new Auth\\Plugin($authBackend); // Run the server. $server-\u0026gt;exec(); config the auth The above code has a basic auth.We need to write our auth setting in a file like htdigest.We will use use a realm like SabreDAV\nRun the command to get the password hash. php -r \u0026quot;echo md5('username:SabreDAV:password');\u0026quot;The username is your username.The password is your passwrod.The SabreDAV is your realm.You will get a string like this.5790c3784a79a018d1186528df520e11\nYou need to write the text like below to your htdigest file. username:SabreDAV:5790c3784a79a018d1186528df520e11\nRemove the annatation in the file above and put the all files to your server.\nthe zip I build I build the above file and add the basic auth.The username is usernmae.The password is the password.\nThe download link is 488c0174-750c-4f04-993c-35325178cdd6.zip\nYou can directly use it after change the username and password.\nconfig for alist name value Driver WebDav Mount Path /webdav Address http://127.0.0.1:8080/webdav.php Username username Password password Root folder path / ","date":"2025-05-07T19:37:35+08:00","image":"http://localhost:1313/p/2025/05/07/php-webdav/cover_hu_6e4227795daa12b0.png","permalink":"http://localhost:1313/p/2025/05/07/php-webdav/","title":"php webdav"},{"content":"summary alist is a popular open source tool which can help you control your many network disk.And taoSync is a tool help you to copy the data between different network disk. Now let us learn how to run the taoSync\ngithub link taoSync https://github.com/dr34m-cn/taosync alist https://github.com/AlistGo/alist\ninstallation taoSync is written in python.And it has a web frontend.We need to compile the frontent.I help you to compile it.The below is the file link. https://alist.0031400.xyz/d/public/taoSync/0.2.7/taosync-v0.2.7.tar.gz\n1 2 3 4 5 cd \u0026lt;the folder you want put the app\u0026gt; wget https://alist.0031400.xyz/d/public/taoSync/0.2.7/taosync-v0.2.7.tar.gz tar xf taosync-v0.2.7.tar.gz pip install -r requirements.txt python main.py You need to change the password firstly.\nenter the web panel The app is defaultly open on the private network.If you are running it on a remote server,you can\u0026rsquo;t visit the web panel.You can use the ssh tunnel.And the app taoSync should not be open on the public network.\n1 ssh -L 127.0.0.1:8023:127.0.0.1:8023 \u0026lt;user\u0026gt;@\u0026lt;address\u0026gt; other There are releases on the github.Why not we use the official release?The app is written in python.And the author use the tool pyinstaller.And I found when I tried to run on debian 12,it didn\u0026rsquo;t work very well.It showed that I lacked the lib musl.But musl should be used in alpine.So I choose to run it with python.\ncompile yourself What we need to compile is the frontend.It need the nodejs.\n1 2 3 4 5 cd \u0026lt;the folder you want to put the file\u0026gt; git clone https://github.com/dr34m-cn/taosync.git cd taosync/frontend npm i npm run build You should put the files in the folder taosync/frontend/dist to the folder front near the file main.py\nfile tree 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 . ├── common │ ├── commonService.py │ ├── commonUtils.py │ ├── config.py │ ├── __init__.py │ ├── LNG.py │ ├── __pycache__ │ ├── sqlBase.py │ └── sqlInit.py ├── controller │ ├── baseController.py │ ├── __init__.py │ ├── jobController.py │ ├── notifyController.py │ ├── __pycache__ │ └── systemController.py ├── front │ ├── alist.svg │ ├── css │ ├── fonts │ ├── img │ ├── index.html │ ├── js │ ├── logo-128-128.png │ ├── logo-200-64.png │ ├── notify │ └── robot.txt ├── main.py ├── mapper │ ├── alistMapper.py │ ├── __init__.py │ ├── jobMapper.py │ ├── notifyMapper.py │ ├── __pycache__ │ └── userMapper.py ├── requirements.txt └── service ├── alist ├── __init__.py ├── notify ├── __pycache__ ├── syncJob └── system screenshot ","date":"2025-05-07T19:34:42+08:00","image":"http://localhost:1313/p/2025/05/07/taosync/cover_hu_6721e5cfedafd36e.png","permalink":"http://localhost:1313/p/2025/05/07/taosync/","title":"taoSync"}]